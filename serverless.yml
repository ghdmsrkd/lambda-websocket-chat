service: lambda-websocket-chat
frameworkVersion: '3'

plugins:
  - serverless-plugin-typescript
  - serverless-offline

provider:
  name: aws
  runtime: nodejs16.x
  region: ap-northeast-2
  iam: 
    role: 
      statements:
        - Effect: "Allow"
          Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            - "dynamodb:*"
          Resource: "*"

functions:
  websocketHandler:
    handler: src/handler.websocketHandler
    events:
      - websocket:
          route: $disconnect
      - websocket:
          route: $connect
  websocketDefaultHandler:
    handler: src/handler.websocketDefaultHandler
    events:
      - websocket:
          route: $default

  sendMessageHandler:
    handler: src/handler.sendMessageHandler
    events:
      - websocket:
          route: sendMessage
  roomHandler:
    handler: src/handler.roomHandler
    events:
      - http:
          path: room
          method: any
          cors: true

resources:
  Resources:
    # 유저 테이블
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CHAT_USER
        AttributeDefinitions:
          - AttributeName: connection_id 
            AttributeType: S
          - AttributeName: room_id
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: connection_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: room_id-user_id-index
            KeySchema:
              - AttributeName: room_id
                KeyType: HASH
              - AttributeName: user_id
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
    # 체팅방 테이블
    RoomTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CHAT_ROOM
        AttributeDefinitions:
          - AttributeName: room_id 
            AttributeType: S
          - AttributeName: created_at
            AttributeType: N
        KeySchema:
          - AttributeName: room_id
            KeyType: HASH
          - AttributeName: created_at
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    # 메시지 테이블
    MessageTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CHAT_MESSAGE
        AttributeDefinitions:
          - AttributeName: room_id 
            AttributeType: S
          - AttributeName: created_at
            AttributeType: N
        KeySchema:
          - AttributeName: room_id
            KeyType: HASH
          - AttributeName: created_at
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST